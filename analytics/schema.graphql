type User @entity {
  id: ID!
  timestamp: BigInt!
  lastActivityTimestamp: BigInt!
  transaction: Bytes!
  accountSource: Bytes
  address: Bytes!

  accounts: [Account!]! @derivedFrom(field: "user")
  dailyHistory: [UserDailyHistory!]! @derivedFrom(field: "user")
  totalHistory: [UserTotalHistory!]! @derivedFrom(field: "user")
}

type Account @entity {
  id: ID!
  user: User!
  timestamp: BigInt!
  name: String
  quotesCount: BigInt!
  positionsCount: BigInt!
  lastActivityTimestamp: BigInt!
  deposit: BigInt!
  withdraw: BigInt!
  allocated: BigInt!
  deallocated: BigInt!
  transaction: Bytes!
  updateTimestamp: BigInt!
  accountSource: Bytes
}

type BalanceChange @entity {
  id: ID!
  type: String!
  account: String!
  amount: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transaction: Bytes!
}

type TradeHistory @entity {
  id: ID!
  account: String!
  volume: BigInt!
  timestamp: BigInt!
  updateTimestamp: BigInt!
  blockNumber: BigInt!
  transaction: Bytes!
  quoteStatus: Int!
  quote: BigInt!
}

type Quote @entity {
  id: ID!
  account: String!
  partyBsWhiteList: [Bytes!]
  symbolId: BigInt!
  positionType: Int!
  orderType: Int!
  price: BigInt!
  marketPrice: BigInt!
  openPrice: BigInt
  deadline: BigInt!
  quantity: BigInt!
  cva: BigInt!
  mm: BigInt!
  lf: BigInt!
  maxInterestRate: BigInt!
  quoteStatus: Int!
  blockNumber: BigInt!
  closedAmount: BigInt!
  avgClosedPrice: BigInt!
  timestamp: BigInt!
  updateTimestamp: BigInt!
  transaction: Bytes!
  partyB: Bytes
  liquidatedSide: Int
}

type DailyHistory @entity {
  id: ID!
  quotesCount: BigInt!
  tradeVolume: BigInt!
  openTradeVolume: BigInt!
  closeTradeVolume: BigInt!
  deposit: BigInt!
  withdraw: BigInt!
  allocate: BigInt!
  deallocate: BigInt!
  activeUsers: BigInt!
  newUsers: BigInt!
  newAccounts: BigInt!
  platformFee: BigInt!
  openInterest: BigInt!
  accountSource: Bytes
  updateTimestamp: BigInt!
  timestamp: BigInt!
}

type UserDailyHistory @entity {
  id: ID!
  user: User!
  quotesCount: BigInt!
  tradeVolume: BigInt!
  openTradeVolume: BigInt!
  closeTradeVolume: BigInt!
  deposit: BigInt!
  withdraw: BigInt!
  allocate: BigInt!
  deallocate: BigInt!
  accounts: BigInt!
  generatedFee: BigInt!
  accountSource: Bytes
  updateTimestamp: BigInt!
  timestamp: BigInt!
}

type UserTotalHistory @entity {
  id: ID!
  user: User!
  quotesCount: BigInt!
  tradeVolume: BigInt!
  openTradeVolume: BigInt!
  closeTradeVolume: BigInt!
  deposit: BigInt!
  withdraw: BigInt!
  allocate: BigInt!
  deallocate: BigInt!
  accounts: BigInt!
  generatedFee: BigInt!
  accountSource: Bytes
  updateTimestamp: BigInt!
  timestamp: BigInt!
}

type TotalHistory @entity {
  id: ID!
  quotesCount: BigInt!
  tradeVolume: BigInt!
  openTradeVolume: BigInt!
  closeTradeVolume: BigInt!
  deposit: BigInt!
  withdraw: BigInt!
  allocate: BigInt!
  deallocate: BigInt!
  users: BigInt!
  accounts: BigInt!
  platformFee: BigInt!
  accountSource: Bytes
  updateTimestamp: BigInt!
  timestamp: BigInt!
}

type Symbol @entity {
  id: ID!
  name: String!
  tradingFee: BigInt!
  timestamp: BigInt!
  updateTimestamp: BigInt!
  totalTradeVolume: SymbolTradeVolume @derivedFrom(field: "symbol")
  dailyTradeVolume: [SymbolDailyTradeVolume!] @derivedFrom(field: "symbol")
  openInterests: [OpenInterest!] @derivedFrom(field: "symbol")
}

type SymbolDailyTradeVolume @entity {
  id: ID!
  symbol: Symbol!
  timestamp: BigInt!
  updateTimestamp: BigInt!
  volume: BigInt!
  accountSource: Bytes
}

type SymbolTradeVolume @entity {
  id: ID!
  symbolId: BigInt!
  timestamp: BigInt!
  updateTimestamp: BigInt!
  volume: BigInt!
  accountSource: Bytes
  symbol: Symbol!
}

type OpenInterest @entity {
  id: ID!
  amount: BigInt!
  accumulatedAmount: BigInt!
  timestamp: BigInt!
  accountSource: Bytes
  symbol: Symbol
}
